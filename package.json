{
  "name": "agentic-boardroom",
  "version": "3.0.0",
  "description": "🏢 AI-powered organizational management system with sophisticated agent hierarchies - architecting sustainable systems to elevate humanity",
  "keywords": [
    "ai",
    "agents",
    "organizational-management",
    "artificial-intelligence",
    "automation",
    "sustainability",
    "green-computing",
    "multi-agent-system",
    "boardroom",
    "decision-making"
  ],
  "author": "Agentic Boardroom Team",
  "license": "MIT",
  "homepage": "https://github.com/your-org/agentic-boardroom#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/agentic-boardroom.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/agentic-boardroom/issues"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "main": "src/index.js",
  "scripts": {
    "start": "node src/index.js",
    "dev": "nodemon src/index.js",
    "build": "npm run build:ui && npm run build:docs",
    "build:ui": "echo Skipping UI build: static dashboard served directly",
    "build:docs": "jsdoc -c jsdoc.json",
    "test": "jest --coverage",
    "test:watch": "jest --watch",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "cypress run",
    "lint": "eslint src/ --ext .js,.ts && yamllint **/*.yaml",
    "lint:fix": "eslint src/ --ext .js,.ts --fix",
    "format": "prettier --write src/**/*.{js,ts,json,yaml,md}",
    "validate": "npm run lint && npm run test && npm run security:check",
    "security:check": "npm audit && snyk test",
    "security:fix": "npm audit fix",
    "deploy:dev": "./scripts/deploy.sh dev",
    "deploy:staging": "./scripts/deploy.sh staging",
    "deploy:prod": "./scripts/deploy.sh prod",
    "setup": "npm install && npm run setup:env && npm run setup:deps",
    "setup:env": "cp .env.example .env && echo 'Please update .env with your API keys'",
    "setup:deps": "npm run setup:terraform && npm run setup:k8s",
    "setup:terraform": "cd infrastructure && terraform init",
    "setup:k8s": "kubectl create namespace agentic-boardroom || true",
    "clean": "rm -rf node_modules dist coverage .nyc_output",
    "reset": "npm run clean && npm install",
    "docs": "npm run build:docs && open docs/index.html",
    "health:check": "node scripts/health-check.js",
    "agents:start": "node scripts/start-agents.js",
    "agents:stop": "node scripts/stop-agents.js",
    "agents:status": "node scripts/agent-status.js",
    "overlord:start": "node scripts/start-overlord.js",
    "overlord:stop": "node scripts/stop-overlord.js",
    "dashboard": "cd ui && npm start",
    "monitor": "open http://localhost:3000/dashboards",
    "logs": "kubectl logs -f -l app=agentic-boardroom",
    "backup": "node scripts/backup-system.js",
    "restore": "node scripts/restore-system.js",
    "migrate": "node scripts/migrate-database.js",
    "seed": "node scripts/seed-data.js",
    "benchmark": "node scripts/performance-benchmark.js",
    "carbon:report": "node scripts/carbon-footprint-report.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "dotenv": "^16.3.1",
    "axios": "^1.6.2",
    "openai": "^4.20.1",
    "@anthropic-ai/sdk": "^0.9.1",
    "@google-cloud/aiplatform": "^3.8.0",
    "socket.io": "^4.7.4",
    "redis": "^4.6.10",
    "pg": "^8.11.3",
    "mongoose": "^8.0.3",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "joi": "^17.11.0",
    "winston": "^3.11.0",
    "prom-client": "^15.0.0",
    "node-cron": "^3.0.3",
    "uuid": "^9.0.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "chalk": "^5.3.0",
    "inquirer": "^9.2.12",
    "commander": "^11.1.0",
    "yaml": "^2.3.4"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "cypress": "^13.6.0",
    "nodemon": "^3.0.2",
    "eslint": "^8.56.0",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "jsdoc": "^4.0.2",
    "nyc": "^15.1.0",
    "snyk": "^1.1266.0",
    "docker-compose": "^0.24.2",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3"
  },
  "peerDependencies": {
    "kubernetes": ">=1.24.0",
    "terraform": ">=1.5.0",
    "helm": ">=3.10.0"
  },
  "optionalDependencies": {
    "sharp": "^0.33.0",
    "canvas": "^2.11.2"
  },
  "config": {
    "port": 3000,
    "logLevel": "info",
    "environment": "development"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run validate"
    }
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{yaml,yml}": [
      "yamllint",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.test.{js,ts}",
      "!src/config/*.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "testMatch": [
      "**/__tests__/**/*.{js,ts}",
      "**/*.{test,spec}.{js,ts}"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended"
    ],
    "env": {
      "node": true,
      "es2022": true,
      "jest": true
    },
    "rules": {
      "no-console": "warn",
      "no-unused-vars": "error",
      "prefer-const": "error",
      "no-var": "error"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "type-enum": [
        2,
        "always",
        [
          "feat",
          "fix",
          "docs",
          "style",
          "refactor",
          "perf",
          "test",
          "build",
          "ci",
          "chore",
          "revert",
          "agent",
          "overlord",
          "sustainability"
        ]
      ]
    }
  },
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/agentic-boardroom"
  },
  "contributors": [
    "AI Research Team",
    "Sustainability Engineering Team",
    "Quality Assurance Team",
    "Open Source Community"
  ],
  "files": [
    "src/",
    "ui/dist/",
    "configs/",
    "teams/",
    "overlord/",
    "schema/",
    "policies/",
    "infrastructure/",
    "scripts/",
    "docs/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "DEPLOYMENT_GUIDE.md"
  ],
  "directories": {
    "lib": "src",
    "test": "tests",
    "doc": "docs"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org/",
    "access": "public"
  },
  "sustainability": {
    "carbonNeutral": true,
    "renewableEnergy": "100%",
    "greenHosting": "google-cloud-carbon-neutral",
    "circularEconomy": true,
    "sustainabilityReport": "monthly"
  },
  "ai": {
    "models": {
      "openai": ["gpt-4o", "gpt-4o-mini"],
      "anthropic": ["claude-3-opus", "claude-3-sonnet", "claude-3-haiku"],
      "google": ["gemini-1.5-pro", "gemini-1.5-flash", "code-bison"]
    },
    "capabilities": [
      "strategic-planning",
      "technical-architecture",
      "financial-analysis",
      "research-synthesis",
      "creative-innovation",
      "quality-assurance",
      "meeting-facilitation",
      "culture-development",
      "document-processing"
    ],
    "autonomyLevels": ["low", "medium", "high", "supreme"],
    "decisionRouting": "intelligent-multi-dimensional",
    "learningEnabled": true,
    "feedbackLoops": "continuous"
  },
  "system": {
    "architecture": "hierarchical-mesh-hybrid",
    "layers": 4,
    "agents": 10,
    "overlord": "supreme-ai-orchestrator",
    "scalability": "0-to-1000-agents",
    "availability": "99.99%",
    "performance": "sub-500ms-decisions",
    "security": "enterprise-grade",
    "compliance": ["SOC2", "GDPR", "ISO27001"]
  }
}